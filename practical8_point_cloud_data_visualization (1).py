# -*- coding: utf-8 -*-
"""Practical8_POINT CLOUD DATA VISUALIZATION.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w03IvJRWqvlix_DQZ0lPH2QIAWjFPag9

***Install the pydeck package (a Python wrapper for deck.gl, used for 3D/2D web maps).***
"""

pip install pydeck

"""***Import pydeck and nickname it pdk for short.***"""

import pydeck as pdk

"""***Import pandas to read and handle tabular data.***"""

import pandas as pd

"""***A URL pointing to a small CSV dataset with 3D point coordinates and colors.***"""

DATA_URL = "https://raw.githubusercontent.com/ajduberstein/geo_datasets/master/small_waterfall.csv"

"""***Download the CSV from the URL and load it into a pandas DataFrame named df.***"""

df =pd.read_csv(DATA_URL)

"""***Create a Layer that knows how to draw a 3D point cloud:***

***"PointCloudLayer" → tells pydeck we’re drawing 3D points.***

***data=df → use the rows in df as the input features.***

***get_position=["x", "y", "z"] → read each point’s coordinates from columns x, y, z.***

***get_color=["r", "g", "b"] → read each point’s color from columns r, g, b (0–255).***

***get_normal=[0, 0, 15] → a fixed surface normal vector; helps with lighting/shading.***

***point_size=1.7 → how large each point appears on screen.***

***pickable=True → enables mouse picking (you can hover/click points).***

***auto_highlight=True → hovered/clicked points will highlight automatically.***

***Define the camera position and interaction:***

***target=[...] → center the camera on the mean x, y, z of all points.***

***rotation_x=15 → tilt the camera down by 15°.***

***rotation_orbit=30 → rotate around the target horizontally by 30°.***

***zoom=5 → initial zoom level (higher = closer).***

***controller=True → allow mouse/touch controls (orbit, zoom, pan).***
"""

point_cloud = pdk.Layer(
    "PointCloudLayer",
    data=df,
    get_position=["x", "y", "z"],
    get_color=["r", "g", "b"],
    get_normal=[0, 0, 15],
    point_size=1.7,
    pickable=True,
    auto_highlight=True,
)

view = pdk.ViewState(
    target=[df.x.mean(), df.y.mean(), df.z.mean()],
    rotation_x=15,
    rotation_orbit=30,
    zoom=5,
    controller=True,
)

#Choose a 3D orbiting view so you can spin around the scene (interactive).
view3d = pdk.View(type="OrbitView", controller=True)
#views=[view3d] → which viewer layout to use (orbit).
#Build the Deck (the full scene):
#layers=[point_cloud] → what to draw.
#initial_view_state=view → how the camera starts.
deck = pdk.Deck(layers=[point_cloud], initial_view_state=view, views=[view3d])
#Show the interactive map in the notebook output (renders a widget/HTML output there).
#Note: This does not save a file on disk.
deck.show()

"""***Import Colab’s helper to download files to your computer.***
***Download the saved HTML file to your machine.***
"""

from google.colab import files
files.download('point_cloud.html')

#Make sure it actually saves to the current folder
import os
output_path = os.path.abspath("point_cloud.html")
deck.to_html(output_path, notebook_display=False)
print(f" Exported HTML file saved at:\n{output_path}")